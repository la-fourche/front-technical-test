{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/Users/mehditagaizine/Dev/front-technical-test/front/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Product from '../components/product';\n\nvar Home = function Home() {\n  var _useState = useState([]),\n      pages = _useState[0],\n      setPages = _useState[1];\n\n  var _useState2 = useState([]),\n      products = _useState2[0],\n      setProducts = _useState2[1];\n\n  var _useState3 = useState(1),\n      page = _useState3[0],\n      setPage = _useState3[1];\n\n  var getData = function getData(n) {\n    var _ref, headers, data, pages_;\n\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://0.0.0.0:8080/products/?_page=\".concat(n, \"&_limit=20\")));\n\n          case 2:\n            _ref = _context.sent;\n            headers = _ref.headers;\n            data = _ref.data;\n            pages_ = _parseInt(headers['x-total-count']) / 20;\n            console.log(pages_);\n            setPages(new Array(pages_));\n            setProducts(data);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var getPage = function getPage(n) {\n    setPage(n);\n    getData(n);\n  };\n\n  if (products.length === 0) getData(page);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Hi\", products.map(function (product) {\n    return __jsx(Product, {\n      product: product,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/mehditagaizine/Dev/front-technical-test/front/pages/index.tsx"],"names":["React","useState","axios","Product","Home","pages","setPages","products","setProducts","page","setPage","getData","n","get","headers","data","pages_","console","log","Array","getPage","length","map","product"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,kBACWH,QAAQ,CAAC,EAAD,CADnB;AAAA,MACTI,KADS;AAAA,MACFC,QADE;;AAAA,mBAEiBL,QAAQ,CAAC,EAAD,CAFzB;AAAA,MAETM,QAFS;AAAA,MAECC,WAFD;;AAAA,mBAGSP,QAAQ,CAAC,CAAD,CAHjB;AAAA,MAGTQ,IAHS;AAAA,MAGHC,OAHG;;AAIjB,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACgBV,KAAK,CAACW,GAAN,+CAAiDD,CAAjD,gBADhB;;AAAA;AAAA;AACPE,YAAAA,OADO,QACPA,OADO;AACEC,YAAAA,IADF,QACEA,IADF;AAERC,YAAAA,MAFQ,GAEC,UAASF,OAAO,CAAC,eAAD,CAAhB,IAAqC,EAFtC;AAGdG,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAV,YAAAA,QAAQ,CAAC,IAAIa,KAAJ,CAAUH,MAAV,CAAD,CAAR;AACAR,YAAAA,WAAW,CAACO,IAAD,CAAX;;AALc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAOA,MAAMK,OAAO,GAAG,SAAVA,OAAU,CAACR,CAAD,EAAe;AAC7BF,IAAAA,OAAO,CAACE,CAAD,CAAP;AACAD,IAAAA,OAAO,CAACC,CAAD,CAAP;AACD,GAHD;;AAIA,MAAIL,QAAQ,CAACc,MAAT,KAAoB,CAAxB,EAA2BV,OAAO,CAACF,IAAD,CAAP;AAC3B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGIF,QAAQ,CAACe,GAAT,CAAa,UAACC,OAAD;AAAA,WAAkB,MAAC,OAAD;AAAS,MAAA,OAAO,EAAEA,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB;AAAA,GAAb,CAHJ,CADF;AAYD,CA5BD;;AA8BA,eAAenB,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Product from '../components/product';\n\n\nconst Home = () => {\n  const [ pages, setPages ] = useState([]);\n  const [ products, setProducts ] = useState([]);\n  const [ page, setPage ] = useState(1);\n  const getData = async (n: number) => {\n    const {headers, data} = await axios.get(`http://0.0.0.0:8080/products/?_page=${n}&_limit=20`);\n    const pages_ = parseInt(headers['x-total-count']) / 20;\n    console.log(pages_)\n    setPages(new Array(pages_));\n    setProducts(data);\n  }\n  const getPage = (n: number) => {\n    setPage(n);\n    getData(n);\n  }\n  if (products.length === 0) getData(page);\n  return (\n    <div>\n      Hi\n      {\n        products.map((product: any) => <Product product={product}/>)\n      }\n      {\n        \n        // allPages.map((_, index:number) => page === index ? \"\" : <a onClick={() => getPage(index + 1)}>{index + 1}</a>)\n      }\n    </div>\n  );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}