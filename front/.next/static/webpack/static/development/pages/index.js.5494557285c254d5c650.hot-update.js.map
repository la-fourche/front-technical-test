{"version":3,"file":"static/webpack/static/development/pages/index.js.5494557285c254d5c650.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Product from '../components/product';\nimport { connect } from 'react-redux';\n\nclass Home extends React.Component {\n  state = {\n    page: 1,\n    pages: 0,\n  }\n  componentDidMount(){\n    const self: any = this;\n    const verif = JSON.parse(localStorage.getItem('myKey:546726736522537625467'));\n    if (verif.length > 0) {\n      self.props.dispatch({\n        type: 'SET',\n        data: verif,\n      });\n    }\n    axios.get(`http://0.0.0.0:8080/products/?_page=&_limit=20`).then(({headers, data}) => {\n      const pages_ = parseInt(headers['x-total-count']) / 20;\n      self.setState({pages:pages_});\n      localStorage.setItem('myKey:546726736522537625467', JSON.stringify(data))\n      self.props.dispatch({\n        type: 'SET',\n        data,\n      });\n    })\n  }\n  componentDidUpdate(prevProps) {\n    const { data }: any = this.props;\n    if (prevProps.data !== data) {\n      localStorage.setItem('myKey:546726736522537625467', JSON.stringify(data))  \n    }\n  }\n  render() {\n  const props: any = this.props;\n  const { data:products, dispatch } = props;\n  const { page, pages } = this.state;\n  const getData = async (n: number) => {\n    const {headers, data} = await axios.get(`http://0.0.0.0:8080/products/?_page=${n}&_limit=20`);\n    const pages_ = parseInt(headers['x-total-count']) / 20;\n    this.setState({pages:pages_});\n    dispatch({\n      type: 'SET',\n      data,\n    });\n  }\n  const getPage = (e:any) => {\n    const n = e.target.id;\n    this.setState({page:n});\n    getData(n);\n  }\n  const Pagination = () => {\n    let pages_ = [];\n    for(var i = 1; i < pages + 1; i++){\n      pages_.push(\n        <a key={i+Date.now()} href=\"#\" style={{ marginRight: '15px' }} id={i.toString()} onClick={getPage}>{i}</a>\n      )\n    }\n    return (<div>\n      {pages_}\n    </div>);\n  }\n  return (\n    <div>\n      {\n        products.map((product: any, index: number) => <Product key={index} product={product}/>)\n      }\n      <Pagination />\n    </div>\n  );\n};\n}\nexport default connect(s => s)(Home);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;;;;;;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAnEA;AACA;AAoEA;AAAA;AAAA;;;;A","sourceRoot":""}